{"ast":null,"code":"var _jsxFileName = \"/Users/mirudhulaasanthi/Desktop/ReactJS/todo/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nfunction App() {\n  const [rows, setRows] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  // Load data from local storage on component mount\n  useEffect(() => {\n    const savedRows = JSON.parse(localStorage.getItem('list')) || [];\n    setRows(savedRows);\n  }, []);\n\n  // Save data to local storage whenever rows change\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(rows));\n  }, [rows]);\n  const handleAddRow = () => {\n    if (inputValue.trim() !== '') {\n      const newRow = {\n        id: Date.now(),\n        content: inputValue,\n        completed: false // Add completed property to track row completion\n      };\n      setRows(prevRows => [...prevRows, newRow]);\n      setInputValue('');\n    }\n  };\n  const handleDeleteRow = id => {\n    setRows(prevRows => prevRows.filter(row => row.id !== id));\n  };\n  const handleToggleComplete = id => {\n    setRows(prevRows => prevRows.map(row => row.id === id ? {\n      ...row,\n      completed: !row.completed\n    } : row));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-fluid text-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title mt-6 text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Make Your Plan\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"inputField\",\n    onSubmit: e => e.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container custom-background text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2 w-100\",\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control mb-2 mb-md-0\",\n    value: inputValue,\n    onChange: e => {\n      setInputValue(e.target.value);\n    },\n    placeholder: \"Enter to-do\",\n    onKeyPress: e => {\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        handleAddRow();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleAddRow,\n    style: {\n      position: 'absolute',\n      right: 0,\n      top: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table custom-rounded-table table-hover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"To-do\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, rows.map(row => /*#__PURE__*/React.createElement(\"tr\", {\n    key: row.id,\n    style: {\n      textDecoration: row.completed ? 'line-through' : 'none',\n      textDecorationColor: row.completed ? 'black' : 'initial'\n    },\n    onClick: () => handleToggleComplete(row.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, row.content), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete-button\",\n    onClick: () => handleDeleteRow(row.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrash,\n    style: {\n      color: '#b9de00'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  })))))))));\n}\nexport default App;\n\n// const [rows, setRows] = useState([]);\n// const [inputValue, setInputValue] = useState('');\n\n// useEffect(() => {\n//   // Fetch data from the API when the component mounts\n//   fetchData();\n// }, []);\n\n// const fetchData = async () => {\n//   try {\n//     const response = await axios.get('https://jsonplaceholder.typicode.com/todos');\n//     setRows(response.data);\n//   } catch (error) {\n//     console.error('Error fetching data:', error);\n//   }\n// };\n\n// const handleAddRow = async () => {\n//   if (inputValue.trim() !== '') {\n//     try {\n//       const response = await axios.post('https://jsonplaceholder.typicode.com/todos', {\n//         title: inputValue,\n//         completed: false,\n//       });\n\n//       setRows((prevRows) => [...prevRows, response.data]);\n//       setInputValue('');\n//     } catch (error) {\n//       console.error('Error adding row:', error);\n//     }\n//   }\n// };\n\n// const handleDeleteRow = async (id) => {\n//   try {\n//     await axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`);\n//     setRows((prevRows) => prevRows.filter((row) => row.id !== id));\n//   } catch (error) {\n//     console.error('Error deleting row:', error);\n//   }\n// };\n\n// const handleToggleComplete = async (id) => {\n//   try {\n//     const response = await axios.patch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\n//       completed: true,\n//     });\n\n//     setRows((prevRows) =>\n//       prevRows.map((row) => (row.id === id ? response.data : row))\n//     );\n//   } catch (error) {\n//     console.error('Error toggling complete:', error);\n//   }\n// };","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faTrash","faPlus","axios","App","rows","setRows","inputValue","setInputValue","savedRows","JSON","parse","localStorage","getItem","setItem","stringify","handleAddRow","trim","newRow","id","Date","now","content","completed","prevRows","handleDeleteRow","filter","row","handleToggleComplete","map","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","preventDefault","style","position","type","value","onChange","target","placeholder","onKeyPress","key","onClick","right","top","icon","textDecoration","textDecorationColor","color"],"sources":["/Users/mirudhulaasanthi/Desktop/ReactJS/todo/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './App.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\n\nfunction App() {\n  const [rows, setRows] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  // Load data from local storage on component mount\n  useEffect(() => {\n    const savedRows = JSON.parse(localStorage.getItem('list')) || [];\n    setRows(savedRows);\n  }, []);\n\n  // Save data to local storage whenever rows change\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(rows));\n  }, [rows]);\n\n  const handleAddRow = () => {\n    if (inputValue.trim() !== '') {\n      const newRow = {\n        id: Date.now(),\n        content: inputValue,\n        completed: false, // Add completed property to track row completion\n      };\n\n      setRows((prevRows) => [...prevRows, newRow]);\n      setInputValue('');\n    }\n  };\n\n  const handleDeleteRow = (id) => {\n    setRows((prevRows) => prevRows.filter((row) => row.id !== id));\n  };\n\n  const handleToggleComplete = (id) => {\n    setRows((prevRows) =>\n      prevRows.map((row) =>\n        row.id === id ? { ...row, completed: !row.completed } : row\n      )\n    );\n  };\n\n  return (\n    <div className=\"container-fluid text-center align-items-center\">\n      <div className=\"title mt-6 text-white\">\n        <h1>Make Your Plan</h1>\n      </div>\n\n      <form className=\"inputField\" onSubmit={(e) => e.preventDefault()}>\n        <div className=\"container custom-background text-white\">\n          <div className=\"mb-2 w-100\" style={{ position: 'relative' }}>\n            <input\n              type=\"text\"\n              className=\"form-control mb-2 mb-md-0\"\n              value={inputValue}\n              onChange={(e) => {\n                setInputValue(e.target.value);\n              }}\n              placeholder=\"Enter to-do\"\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                  handleAddRow();\n                }\n              }}\n            />\n            <button\n              onClick={handleAddRow}\n              style={{ position: 'absolute', right: 0, top: 0 }}\n            >\n              <FontAwesomeIcon icon={faPlus} />\n            </button>\n          </div>\n          <br />\n          \n          <table className=\"table custom-rounded-table table-hover\">\n            <thead>\n              <tr>\n                <th>To-do</th>\n              </tr>\n            </thead>\n            <tbody>\n              {rows.map((row) => (\n                <tr\n                  key={row.id}\n                  style={{\n                    textDecoration: row.completed ? 'line-through' : 'none',\n                    textDecorationColor: row.completed ? 'black' : 'initial',\n                  }}\n                  onClick={() => handleToggleComplete(row.id)}\n                >\n                  <td>{row.content}</td>\n                  <button\n                    className=\"delete-button\"\n                    onClick={() => handleDeleteRow(row.id)}\n                  >\n                    <FontAwesomeIcon icon={faTrash} style={{ color: '#b9de00' }} />\n                  </button>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          </div>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n// const [rows, setRows] = useState([]);\n// const [inputValue, setInputValue] = useState('');\n\n// useEffect(() => {\n//   // Fetch data from the API when the component mounts\n//   fetchData();\n// }, []);\n\n// const fetchData = async () => {\n//   try {\n//     const response = await axios.get('https://jsonplaceholder.typicode.com/todos');\n//     setRows(response.data);\n//   } catch (error) {\n//     console.error('Error fetching data:', error);\n//   }\n// };\n\n// const handleAddRow = async () => {\n//   if (inputValue.trim() !== '') {\n//     try {\n//       const response = await axios.post('https://jsonplaceholder.typicode.com/todos', {\n//         title: inputValue,\n//         completed: false,\n//       });\n\n//       setRows((prevRows) => [...prevRows, response.data]);\n//       setInputValue('');\n//     } catch (error) {\n//       console.error('Error adding row:', error);\n//     }\n//   }\n// };\n\n// const handleDeleteRow = async (id) => {\n//   try {\n//     await axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`);\n//     setRows((prevRows) => prevRows.filter((row) => row.id !== id));\n//   } catch (error) {\n//     console.error('Error deleting row:', error);\n//   }\n// };\n\n// const handleToggleComplete = async (id) => {\n//   try {\n//     const response = await axios.patch(`https://jsonplaceholder.typicode.com/todos/${id}`, {\n//       completed: true,\n//     });\n\n//     setRows((prevRows) =>\n//       prevRows.map((row) => (row.id === id ? response.data : row))\n//     );\n//   } catch (error) {\n//     console.error('Error toggling complete:', error);\n//   }\n// };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}